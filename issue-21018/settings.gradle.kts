/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.4.2/userguide/multi_project_builds.html
 */

rootProject.name = "issue-21018"

val propertyPattern = java.util.regex.Pattern.compile("\\s*(\\S+)\\s*=\\s*(\\S+)\\s*")!!

includeBuild("iceberg") {
  name = "iceberg"

  // WORKAROUND for Gradle issue 21019:
  // Iceberg's "dependency recommendation" stuff doesn't work when the Iceberg build is included
  // here. So parse Iceberg's versions.props file here and substitute the affected dependencies.
  val icebergVersions = mutableMapOf<String, String>()
  file(projectDir.resolve("versions.props")).forEachLine { line ->
    val m = propertyPattern.matcher(line.trim())
    if (m.matches()) {
      icebergVersions[m.group(1)] = m.group(2)
    }
  }
  // WORKAROUND for Gradle issue 21018
  //  icebergVersions["com.google.cloud:google-cloud-nio"] = "0.123.17"
  //  icebergVersions["com.google.cloud:google-cloud-storage"] = "2.2.2"

  // WORKAROUND for Gradle issue 21019:
  dependencySubstitution {
    all {
      val req = requested
      if (req is ModuleComponentSelector && req.version.isEmpty()) {
        var ver = icebergVersions["${req.group}:${req.module}"]
        if (ver == null) {
          ver = icebergVersions["${req.group}:*"]
        }
        if (ver != null) {
          logger.debug(
            "Nessie/Iceberg - managed {}:{} with version {}",
            req.group,
            req.module,
            ver
          )
          useTarget(module("${req.group}:${req.module}:${ver}"), "Managed via Nessie")
        }
      }
    }
  }
}
